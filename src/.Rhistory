as.matrix(DTD_lsfit_reference),
as.matrix(naive_qprog_reference),
as.matrix(DTD_qprog_reference),
as.matrix(naive_sc_reference),
as.matrix(DTD_sc_reference))
colnames(cor_data) <- c("naive_rodeo_reference", "DTD_rodeo_reference", "naive_lsfit_reference","DTD_lsfit_reference",
"naive_qprog_reference","DTD_qprog_reference","naive_sc_reference", "DTD_sc_reference")
cor_bulk_data <- cbind(as.matrix(naive_rodeo_reference_bulk),
as.matrix(DTD_rodeo_reference_bulk),
as.matrix(naive_lsfit_reference_bulk),
as.matrix(DTD_lsfit_reference_bulk),
as.matrix(naive_qprog_reference_bulk),
as.matrix(DTD_qprog_reference_bulk)
)
colnames(cor_bulk_data) <- c("naive_rodeo_reference_bulk", "DTD_rodeo_reference_bulk",
"naive_lsfit_reference_bulk", "DTD_lsfit_reference_bulk",
"naive_qprog_reference_bulk", "DTD_qprog_reference_bulk")
library(reshape2)
library(ggplot2)
cor_matrix <- melt(cor_data)
cor_plot <- ggplot(cor_matrix, mapping = aes(x = Var2, y = Var1, fill = value))
cor_plot +
geom_tile(color = "white", size = 0.2) +
geom_point(aes(size = abs(value)), shape = 15, show.legend = TRUE)+
scale_fill_gradient2(mid="#FBFEF9",low="#0C6291",high="#A63446", limits = c(-1,1), name = "Correlation Value")+
theme_minimal() +
labs( subtitle = "Tirosh_Correlation_Heatmap", x = "Model names", y = " Cell types")+
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 10, hjust = 1),
axis.text.y = element_text(size = 10))
cor_plot +
geom_tile(color = "white", size = 0.2) +
geom_point(aes(size = abs(value)), shape = 15, show.legend = TRUE)+
scale_fill_gradient2(mid="#FBFEF9",low="#0C6291",high="#A63446", limits = c(-1,1), name = "Correlation Value")+
theme_minimal() +
labs( subtitle = "Tirosh_Correlation_Heatmap", x = "Model names", y = " Cell types")+
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 10, hjust = 1, color = "black"),
axis.text.y = element_text(size = 10))
cor_plot +
geom_tile(color = "white", size = 0.2) +
geom_point(aes(size = abs(value)), shape = 15, show.legend = TRUE)+
scale_fill_gradient2(mid="#FBFEF9",low="#0C6291",high="#A63446", limits = c(-1,1), name = "Correlation Value")+
theme_minimal() +
labs( subtitle = "Tirosh_Correlation_Heatmap", x = "Model names", y = " Cell types")+
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 10, hjust = 1, color = "black"),
axis.text.y = element_text(size = 10, color = "black"))
ggsave("heatmap1.tiff",
path = "C:/vaishnav documents/Regensburg docs/Bioinformatics/Internship/smartgit/Results",
units = "in", width = 5.5, height = 4.5, dpi = 300, compression = 'lzw')
cor_bulk_matrix <- melt(cor_bulk_data)
cor_bulk_plot <- ggplot(cor_bulk_matrix, mapping = aes(x = Var2, y = Var1, fill = value))
cor_bulk_plot +
geom_tile(color = "white", size = 0.2) +
geom_point(aes(size = abs(value)), shape = 15, show.legend = TRUE)+
scale_fill_gradient2(mid="#FBFEF9",low="#0C6291",high="#A63446", limits = c(-1,1), name = "Correlation Value")+
theme_minimal() +
labs( subtitle = "Tirosh_Bulk_Correlation_heatmap", x = "Model names", y = " Cell types")+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 10, hjust = 1, color = "black"),
axis.text.y = element_text(size = 10, color = "black"))
ggsave("heatmap2.tiff",
path = "C:/vaishnav documents/Regensburg docs/Bioinformatics/Internship/smartgit/Results",
units = "in", width = 5.5, height = 4.5, dpi = 300, compression = 'lzw')
cor_bulk_plot <- ggplot(cor_bulk_matrix, mapping = aes(x = Var2, y = Var1, fill = value))
cor_bulk_plot +
geom_tile(color = "white", size = 0.2) +
geom_point(aes(size = abs(value)), shape = 15, show.legend = TRUE)+
scale_fill_gradient2(mid="#FBFEF9",low="#0C6291",high="#A63446", limits = c(-1,1), name = "Correlation Value")+
theme_minimal() +
labs( subtitle = "Tirosh_Bulk_Correlation_heatmap", x = "Model names", y = " Cell types")+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 10, hjust = 1, color = "black"),
axis.text.y = element_text(size = 10, color = "black"))
cor_bulk_plot <- ggplot(cor_bulk_matrix, mapping = aes(x = Var2, y = Var1, fill = value))
cor_bulk_plot +
geom_tile(color = "white", size = 0.2) +
geom_point(aes(size = abs(value)), shape = 15, show.legend = TRUE)+
scale_fill_gradient2(mid="#FBFEF9",low="#0C6291",high="#A63446", limits = c(-1,1), name = "Correlation Value")+
theme_minimal() +
labs( subtitle = "Tirosh_Bulk_Correlation_heatmap", x = "Model names", y = " Cell types")+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 10, hjust = 1, color = "black"),
axis.text.y = element_text(size = 10, color = "black"))
cor_bulk_plot +
geom_tile(color = "white", size = 0.2) +
geom_point(aes(size = abs(value)), shape = 15, show.legend = TRUE)+
scale_fill_gradient2(mid="#FBFEF9",low="#0C6291",high="#A63446", limits = c(-1,1), name = "Correlation Value")+
theme_minimal() +
labs( subtitle = "Tirosh_Bulk_Correlation_heatmap", x = "Model names", y = " Cell types")+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 10, hjust = 1, color = "black"),
axis.text.y = element_text(size = 10, color = "black"))
ggsave("heatmap2.tiff",
path = "C:/vaishnav documents/Regensburg docs/Bioinformatics/Internship/smartgit/Results",
units = "in", width = 7, height = 6, dpi = 300, compression = 'lzw')
cor_plot <- ggplot(cor_matrix, mapping = aes(x = Var2, y = Var1, fill = value))
cor_plot +
geom_tile(color = "white", size = 0.2) +
geom_point(aes(size = abs(value)), shape = 15, show.legend = TRUE)+
scale_fill_gradient2(mid="#FBFEF9",low="#0C6291",high="#A63446", limits = c(-1,1), name = "Correlation Value")+
theme_minimal() +
labs( subtitle = "Tirosh_Correlation_Heatmap", x = "Model names", y = " Cell types")+
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 10, hjust = 1, color = "black"),
axis.text.y = element_text(size = 10, color = "black"))
ggsave("heatmap1.tiff",
path = "C:/vaishnav documents/Regensburg docs/Bioinformatics/Internship/smartgit/Results",
units = "in", width = 6, height = 5, dpi = 300, compression = 'lzw')
cor_bulk_matrix <- melt(cor_bulk_data)
cor_bulk_plot <- ggplot(cor_bulk_matrix, mapping = aes(x = Var2, y = Var1, fill = value))
cor_bulk_plot +
geom_tile(color = "white", size = 0.2) +
geom_point(aes(size = abs(value)), shape = 15, show.legend = TRUE)+
scale_fill_gradient2(mid="#FBFEF9",low="#0C6291",high="#A63446", limits = c(-1,1), name = "Correlation Value")+
theme_minimal() +
labs( subtitle = "Tirosh_Bulk_Correlation_heatmap", x = "Model names", y = " Cell types")+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 10, hjust = 1, color = "black"),
axis.text.y = element_text(size = 10, color = "black"))
ggsave("heatmap2.tiff",
path = "C:/vaishnav documents/Regensburg docs/Bioinformatics/Internship/smartgit/Results",
units = "in", width = 6, height = 5, dpi = 300, compression = 'lzw')
pbmc_qprog_data <- readRDS(file.path("C:/vaishnav documents/Regensburg docs/Bioinformatics/Internship/smartgit/Data", "pbmc_qprog_data.rds"))
pbmc_lsfit_data <- readRDS(file.path("C:/vaishnav documents/Regensburg docs/Bioinformatics/Internship/smartgit/Data", "pbmc_lsfit_data.rds"))
pbmc_rodeo_naive_data <- readRDS("rodeo_pbmc_data")
pbmc_rodeo_dtd_data <- readRDS(file.path("C:/vaishnav documents/Regensburg docs/Bioinformatics/Internship/smartgit/Data","DTD_pbmc_rodeo_ref.rds"))
naive_pbmc_rodeo_reference <- pbmc_rodeo_naive_data$naive_rodeo_reference
naive_pbmc_lsfit_reference <- pbmc_lsfit_data$naive_lsfit_reference
naive_pbmc_qprog_reference <- pbmc_qprog_data$naive_qprog_reference
DTD_pbmc_rodeo_reference <- pbmc_rodeo_dtd_data$DTD_pbmc_rodeo_reference
DTD_pbmc_lsfit_reference <- pbmc_lsfit_data$DTD_lsfit_reference
DTD_pbmc_qprog_reference <- pbmc_qprog_data$DTD_qprog_reference
pbmc_cor_data <- cbind(as.matrix(naive_pbmc_rodeo_reference),
as.matrix(DTD_pbmc_rodeo_reference),
as.matrix(naive_pbmc_lsfit_reference),
as.matrix(DTD_pbmc_lsfit_reference),
as.matrix(naive_pbmc_qprog_reference),
as.matrix(DTD_pbmc_qprog_reference))
colnames(pbmc_cor_data) <- c("naive_rodeo_reference", "DTD_pbmc_rodeo_reference",
"naive_lsfit_reference", "DTD_lsfit_reference",
"naive_qprog_reference", "DTD_qprog_reference")
pbmc_cor_matrix <- melt(pbmc_cor_data)
pbmc_cor_plot <- ggplot(pbmc_cor_matrix, mapping = aes(x = Var2, y = Var1, fill = value))
pbmc_cor_plot +
geom_tile(color = "white", size = 0.2) +
geom_point(aes(size = abs(value)), shape = 15, show.legend = TRUE)+
scale_fill_gradient2(mid="#FBFEF9",low="#0C6291",high="#A63446", limits = c(-1,1), name = "Correlation Value")+
theme_minimal() +
labs( subtitle = "PBMC_Correlation_Heatmap", x = "Model names", y = " Cell types")+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 8, hjust = 1, color = "black"),
axis.text.y = element_text(size = 8, color = "black"))
ggsave("heatmap3.tiff",
path = "C:/vaishnav documents/Regensburg docs/Bioinformatics/Internship/smartgit/Results",
units = "in", width = 6, height = 5, dpi = 300, compression = 'lzw')
rodeo_data <- readRDS("RODEO.rds")
rodeo_bulk_data <- readRDS("rodeo_bulkdata")
deconvoluion_bulk_data <- readRDS("decon_bulk_model")
deconvolution_x.matrix_data <- readRDS("decon_x.matrix_data")
decon_rodeo_ref_data <- readRDS("decon_rodeo_ref_data")
lsfit_data <- readRDS(file.path("C:/vaishnav documents/Regensburg docs/Bioinformatics/Internship/smartgit/Data", "tirosh_lsfit_data.rds"))
qprog_data <- readRDS(file.path("C:/vaishnav documents/Regensburg docs/Bioinformatics/Internship/smartgit/Data", "tirosh_qprog_data.rds"))
naive_rodeo_reference <- rodeo_data$cor_reference_x
naive_sc_reference <- rodeo_data$cor_X.matrix
naive_rodeo_reference_bulk <- rodeo_bulk_data$cor_reference_bulk
naive_lsfit_reference <- lsfit_data$naive_lsfit_reference
naive_qprog_reference <- qprog_data$naive_qprog_reference
naive_lsfit_reference_bulk <- lsfit_data$naive_lsfit_reference_bulk
naive_qprog_reference_bulk <- qprog_data$naive_qprog_reference_bulk
DTD_rodeo_reference_bulk <- deconvoluion_bulk_data$cor_decon_model_bulk
DTD_sc_reference <- deconvolution_x.matrix_data$DTD_sc_reference
DTD_rodeo_reference <- decon_rodeo_ref_data$DTD_rodeo_reference
DTD_lsfit_reference <- lsfit_data$DTD_lsfit_reference
DTD_qprog_reference <- qprog_data$DTD_qprog_reference
DTD_lsfit_reference_bulk <- lsfit_data$DTD_lsfit_reference_bulk
DTD_qprog_reference_bulk <- qprog_data$DTD_qprog_reference_bulk
cor_data <- cbind(as.matrix(naive_rodeo_reference),
as.matrix(DTD_rodeo_reference),
as.matrix(naive_lsfit_reference),
as.matrix(DTD_lsfit_reference),
as.matrix(naive_qprog_reference),
as.matrix(DTD_qprog_reference),
as.matrix(naive_sc_reference),
as.matrix(DTD_sc_reference))
colnames(cor_data) <- c("naive_rodeo_reference", "DTD_rodeo_reference", "naive_lsfit_reference","DTD_lsfit_reference",
"naive_qprog_reference","DTD_qprog_reference","naive_sc_reference", "DTD_sc_reference")
cor_bulk_data <- cbind(as.matrix(naive_rodeo_reference_bulk),
as.matrix(DTD_rodeo_reference_bulk),
as.matrix(naive_lsfit_reference_bulk),
as.matrix(DTD_lsfit_reference_bulk),
as.matrix(naive_qprog_reference_bulk),
as.matrix(DTD_qprog_reference_bulk)
)
colnames(cor_bulk_data) <- c("naive_rodeo_reference_bulk", "DTD_rodeo_reference_bulk",
"naive_lsfit_reference_bulk", "DTD_lsfit_reference_bulk",
"naive_qprog_reference_bulk", "DTD_qprog_reference_bulk")
library(reshape2)
library(ggplot2)
cor_matrix <- melt(cor_data)
cor_plot <- ggplot(cor_matrix, mapping = aes(x = Var2, y = Var1, fill = value))
cor_plot +
geom_tile(color = "white", size = 0.2) +
geom_point(aes(size = abs(value)), shape = 15, show.legend = TRUE)+
scale_fill_gradient2(mid="#FBFEF9",low="#0C6291",high="#A63446", limits = c(-1,1), name = "Correlation Value")+
theme_minimal() +
labs( subtitle = "Tirosh_Correlation_Heatmap", x = "Model names", y = " Cell types")+
theme_minimal() +
theme(axis.text.x = element_text(angle = 45,
size = 10, color = "black"),
axis.text.y = element_text(size = 10, color = "black"))
library(reshape2)
library(ggplot2)
cor_matrix <- melt(cor_data)
cor_plot <- ggplot(cor_matrix, mapping = aes(x = Var2, y = Var1, fill = value))
cor_plot +
geom_tile(color = "white", size = 0.2) +
geom_point(aes(size = abs(value)), shape = 15, show.legend = TRUE)+
scale_fill_gradient2(mid="#FBFEF9",low="#0C6291",high="#A63446", limits = c(-1,1), name = "Correlation Value")+
theme_minimal() +
labs( subtitle = "Tirosh_Correlation_Heatmap", x = "Model names", y = " Cell types")+
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1,
size = 10, color = "black"),
axis.text.y = element_text(size = 10, color = "black"))
library(reshape2)
library(ggplot2)
cor_matrix <- melt(cor_data)
cor_plot <- ggplot(cor_matrix, mapping = aes(x = Var2, y = Var1, fill = value))
cor_plot +
geom_tile(color = "white", size = 0.2) +
geom_point(aes(size = abs(value)), shape = 15, show.legend = TRUE)+
scale_fill_gradient2(mid="#FBFEF9",low="#0C6291",high="#A63446", limits = c(-1,1), name = "Correlation Value")+
labs( subtitle = "Tirosh_Correlation_Heatmap", x = "Model names", y = " Cell types")+
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1,
size = 10, color = "black"),
axis.text.y = element_text(size = 10, color = "black"))
ggsave("heatmap1.tiff",
path = "C:/vaishnav documents/Regensburg docs/Bioinformatics/Internship/smartgit/Results",
units = "in", width = 6, height = 5, dpi = 300, compression = 'lzw')
cor_plot <- ggplot(cor_matrix, mapping = aes(x = Var2, y = Var1, fill = value))
cor_plot +
geom_tile(color = "white", size = 0.2) +
geom_point(aes(size = abs(value)), shape = 15, show.legend = TRUE)+
scale_fill_gradient2(mid="#FBFEF9",low="#0C6291",high="#A63446", limits = c(-1,1), name = "Correlation Value")+
labs( subtitle = "Tirosh_Correlation_Heatmap", x = "Model names", y = " Cell types")+
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1,
size = 10, color = "black"),
axis.text.y = element_text(size = 10, color = "black"))
ggsave("heatmap1.tiff",
path = "C:/vaishnav documents/Regensburg docs/Bioinformatics/Internship/smartgit/Results",
units = "in", width = 6, height = 5, dpi = 300, compression = 'lzw')
cor_bulk_matrix <- melt(cor_bulk_data)
cor_bulk_plot <- ggplot(cor_bulk_matrix, mapping = aes(x = Var2, y = Var1, fill = value))
cor_bulk_plot +
geom_tile(color = "white", size = 0.2) +
geom_point(aes(size = abs(value)), shape = 15, show.legend = TRUE)+
scale_fill_gradient2(mid="#FBFEF9",low="#0C6291",high="#A63446", limits = c(-1,1), name = "Correlation Value")+
labs( subtitle = "Tirosh_Bulk_Correlation_heatmap", x = "Model names", y = " Cell types")+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 10, hjust = 1, color = "black"),
axis.text.y = element_text(size = 10, color = "black"))
ggsave("heatmap2.tiff",
path = "C:/vaishnav documents/Regensburg docs/Bioinformatics/Internship/smartgit/Results",
units = "in", width = 6, height = 5, dpi = 300, compression = 'lzw')
pbmc_qprog_data <- readRDS(file.path("C:/vaishnav documents/Regensburg docs/Bioinformatics/Internship/smartgit/Data", "pbmc_qprog_data.rds"))
pbmc_lsfit_data <- readRDS(file.path("C:/vaishnav documents/Regensburg docs/Bioinformatics/Internship/smartgit/Data", "pbmc_lsfit_data.rds"))
pbmc_rodeo_naive_data <- readRDS("rodeo_pbmc_data")
pbmc_rodeo_dtd_data <- readRDS(file.path("C:/vaishnav documents/Regensburg docs/Bioinformatics/Internship/smartgit/Data","DTD_pbmc_rodeo_ref.rds"))
naive_pbmc_rodeo_reference <- pbmc_rodeo_naive_data$naive_rodeo_reference
naive_pbmc_lsfit_reference <- pbmc_lsfit_data$naive_lsfit_reference
naive_pbmc_qprog_reference <- pbmc_qprog_data$naive_qprog_reference
DTD_pbmc_rodeo_reference <- pbmc_rodeo_dtd_data$DTD_pbmc_rodeo_reference
DTD_pbmc_lsfit_reference <- pbmc_lsfit_data$DTD_lsfit_reference
DTD_pbmc_qprog_reference <- pbmc_qprog_data$DTD_qprog_reference
pbmc_cor_data <- cbind(as.matrix(naive_pbmc_rodeo_reference),
as.matrix(DTD_pbmc_rodeo_reference),
as.matrix(naive_pbmc_lsfit_reference),
as.matrix(DTD_pbmc_lsfit_reference),
as.matrix(naive_pbmc_qprog_reference),
as.matrix(DTD_pbmc_qprog_reference))
colnames(pbmc_cor_data) <- c("naive_rodeo_reference", "DTD_pbmc_rodeo_reference",
"naive_lsfit_reference", "DTD_lsfit_reference",
"naive_qprog_reference", "DTD_qprog_reference")
pbmc_cor_matrix <- melt(pbmc_cor_data)
pbmc_cor_plot <- ggplot(pbmc_cor_matrix, mapping = aes(x = Var2, y = Var1, fill = value))
pbmc_cor_plot +
geom_tile(color = "white", size = 0.2) +
geom_point(aes(size = abs(value)), shape = 15, show.legend = TRUE)+
scale_fill_gradient2(mid="#FBFEF9",low="#0C6291",high="#A63446", limits = c(-1,1), name = "Correlation Value")+
labs( subtitle = "PBMC_Correlation_Heatmap", x = "Model names", y = " Cell types")+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 8, hjust = 1, color = "black"),
axis.text.y = element_text(size = 8, color = "black"))
pbmc_cor_matrix <- melt(pbmc_cor_data)
pbmc_cor_plot <- ggplot(pbmc_cor_matrix, mapping = aes(x = Var2, y = Var1, fill = value))
pbmc_cor_plot +
geom_tile(color = "white", size = 0.2) +
geom_point(aes(size = abs(value)), shape = 15, show.legend = TRUE)+
scale_fill_gradient2(mid="#FBFEF9",low="#0C6291",high="#A63446", limits = c(-1,1), name = "Correlation Value")+
labs( subtitle = "PBMC_Correlation_Heatmap", x = "Model names", y = " Cell types")+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 10, hjust = 1, color = "black"),
axis.text.y = element_text(size = 10, color = "black"))
ggsave("heatmap3.tiff",
path = "C:/vaishnav documents/Regensburg docs/Bioinformatics/Internship/smartgit/Results",
units = "in", width = 6, height = 5, dpi = 300, compression = 'lzw')
# Load the data from DTD-tutorials
tiroshdata <- readRDS(file = "DTD tutorials.rds")
# Bulk expression and phenotype data
tm_pheno_data <- tiroshdata$tm_pheno_data
Bulk_expres <- tiroshdata$bulk_expres
bulk.phenodata <- tiroshdata$bulk_pheno
set.seed(12879)
tumor.names <- colnames(Bulk_expres)
View(Bulk_expres)
?file.choose
# Load the pbmc data and assign
pbmc_rodeo_ref_data <- readRDS(file.path("C:/vaishnav documents/Regensburg docs/Bioinformatics/Internship/smartgit/Data", "DTD_pbmc_rodeo_ref.rds"))
pbmc_data <- readRDS("C:/vaishnav documents/Regensburg docs/Bioinformatics/Internship/smartgit/Data/pbmc_data.rds")
pbmc_train_expres <- pbmc_rodeo_ref_data$pbmc_train_expres
pbmc_test_expres <- pbmc_rodeo_ref_data$pbmc_test_expres
pbmc_train_pheno <- pbmc_data$train$bulk_pheno
pbmc_test_pheno <- pbmc_data$test$bulk_pheno
reference_profile_pbmc <- pbmc_rodeo_ref_data$reference_profile_pbmc
library(DTD)
estimate_c_woDTD <- estimate_c(X.matrix = reference_profile_pbmc,
new.data = pbmc_test_expres,
DTD.model = rep(1, nrow(reference_profile_pbmc)),
estimate.c.type = "direct")
cor_estcwodtd_testcpbmc <- mapply(cor, as.data.frame(t(estimate_c_woDTD)),
as.data.frame(t(pbmc_test_pheno)))
cor_estcwodtd_testcpbmc
rodeo_pbmc_data <- list( "naive_rodeo_reference" = cor_estcwodtd_testcpbmc)
saveRDS(rodeo_pbmc_data, file.choose("C:/vaishnav documents/Regensburg docs/Bioinformatics/Internship/smartgit/Data", "naive_pbmc_data.rds"))
rodeo_pbmc_data <- list( "naive_rodeo_reference" = cor_estcwodtd_testcpbmc)
saveRDS(rodeo_pbmc_data, file.choose())
pbmc_data <- readRDS(file.path("C:/vaishnav documents/Regensburg docs/Bioinformatics/Internship/smartgit/Data", "pbmc_data.rds"))
pbmc_train <- pbmc_data$train
pbmc_test <- pbmc_data$test
pbmc_train_expres <- pbmc_train$bulk_expr
pbmc_train_pheno <- pbmc_train$bulk_pheno
pbmc_test_expres <- pbmc_test$bulk_expr
pbmc_test_pheno <- pbmc_test$bulk_pheno
# Load the CellMix package
library(CellMix)
reference_lsfit_data <- ged(pbmc_train_expres, pbmc_train_pheno, method = "cs-lsfit")
reference_lsfit <- reference_lsfit_data@fit@W
n.features <- 500
library(matrixStats)
sds_in_ref <- rowSds(reference_lsfit)
names(sds_in_ref) <- rownames(reference_lsfit)
sort_sds_in_ref <- sort(sds_in_ref,decreasing = TRUE)
select_features <- names(sort_sds_in_ref)[1:n.features]
start_tweak <- rep(1, n.features)
names(start_tweak) <- select_features
library(DTD)
ref_lsfit_pbmc_top <- reference_lsfit[select_features,]
pbmc_train_expres_top <- pbmc_train_expres[select_features,]
pbmc_test_expres_top <- pbmc_test_expres[select_features,]
training.data <- list("mixtures" = pbmc_train_expres_top, "quantities" = pbmc_train_pheno)
set.seed(100)
pbmc_model <- train_deconvolution_model(
tweak = start_tweak,
X.matrix = ref_lsfit_pbmc_top,
train.data.list = training.data,
test.data.list = training.data,
estimate.c.type = "direct",
use.implementation = "cpp"
)
est_c_withDTD <- estimate_c( X.matrix = ref_lsfit_pbmc_top,
new.data = pbmc_test_expres_top,
DTD.model = pbmc_model$best.model$Tweak,
estimate.c.type = "direct")
cor_estcwithDTD_testpbmc <- mapply(cor,
as.data.frame(t(pbmc_test_pheno)),
as.data.frame(t(est_c_withDTD)))
cor_estcwithDTD_testpbmc
library(DTD)
estimate_c_woDTD <- estimate_c(X.matrix = ref_lsfit_pbmc_top,
new.data = pbmc_test_expres_top,
DTD.model = rep(1, nrow(ref_lsfit_pbmc_top)),
estimate.c.type = "direct")
cor_estcwodtd_testcpbmc <- mapply(cor, as.data.frame(t(estimate_c_woDTD)),
as.data.frame(t(pbmc_test_pheno)))
cor_estcwodtd_testcpbmc
pbmc_lsfit_data <- list("naive_lsfit_reference" = cor_estcwodtd_testcpbmc, "DTD_lsfit_reference" = cor_estcwithDTD_testpbmc)
saveRDS(pbmc_lsfit_data, "pbmc_lsfit_data.rds")
tiroshdata <- readRDS(file = "DTD tutorials.rds")
training.data <- tiroshdata$train
testing.data <- tiroshdata$test
library(CellMix)
naive_qprog_reference_data <- ged(training.data$mixtures, training.data$quantities, method = "cs-qprog")
naive_qprog_reference <- naive_qprog_reference_data@fit@W
library(DTD)
set.seed(1234)
estimate_c_qprog_ref <- estimate_c(X.matrix = naive_qprog_reference,
new.data = testing.data$mixtures,
DTD.model = rep(1,nrow(naive_qprog_reference)),
estimate.c.type = "direct")
cor_cell_qprog_ref_test <- mapply(cor, as.data.frame(t(estimate_c_qprog_ref)),
as.data.frame(t(testing.data$quantities)))
cor_cell_qprog_ref_test
select_features <- rownames(naive_qprog_reference)
start_tweak <- rep(1, length(select_features))
names(start_tweak) <- select_features
library(DTD)
tiroshdata <- readRDS(file = "DTD tutorials.rds")
training.data <- tiroshdata$train
testing.data <- tiroshdata$test
library(CellMix)
naive_qprog_reference_data <- ged(training.data$mixtures, training.data$quantities, method = "cs-qprog")
naive_qprog_reference <- naive_qprog_reference_data@fit@W
library(DTD)
set.seed(1234)
estimate_c_qprog_ref <- estimate_c(X.matrix = naive_qprog_reference,
new.data = testing.data$mixtures,
DTD.model = rep(1,nrow(naive_qprog_reference)),
estimate.c.type = "direct")
cor_cell_qprog_ref_test <- mapply(cor, as.data.frame(t(estimate_c_qprog_ref)),
as.data.frame(t(testing.data$quantities)))
cor_cell_qprog_ref_test
select_features <- rownames(naive_qprog_reference)
start_tweak <- rep(1, length(select_features))
names(start_tweak) <- select_features
library(DTD)
set.seed(100)
qprog_bulk_model <- train_deconvolution_model(tweak = start_tweak,
X.matrix = naive_qprog_reference,
train.data.list = training.data,
test.data.list = training.data,
estimate.c.type = "direct",
use.implementation = "cpp")
estimate_c_qprog_ref_model <- estimate_c(
X.matrix = naive_qprog_reference,
new.data = testing.data$mixtures,
DTD.model = qprog_bulk_model,
estimate.c.type = "direct")
cor_estc_dtd_qprog_testpheno <- mapply(cor, as.data.frame(t(testing.data$quantities)),
as.data.frame(t(estimate_c_qprog_ref_model)))
cor_estc_dtd_qprog_testpheno
tirosh_bulk_data <- readRDS("rodeo_bulkdata")
train_bulk_expres <- tirosh_bulk_data$rodeo_bulk_express
train_bulk_pheno <- tirosh_bulk_data$rodeo_bulk_pheno
test_bulk_expres <- tirosh_bulk_data$rodeo_test_bulk_express
test_bulk_pheno <- tirosh_bulk_data$rodeo_test_bulk_pheno
bulk_qprog_reference_data <- ged(train_bulk_expres, t(train_bulk_pheno), method = "cs-qprog")
bulk_qprog_reference <- bulk_qprog_reference_data@fit@W
estimatec_qprog_testbulk <- estimate_c(X.matrix = bulk_qprog_reference,
new.data = test_bulk_expres,
DTD.model = rep(1,nrow(bulk_qprog_reference)),
estimate.c.type = "direct")
cor_estc_qprog_testpheno_wodtd <- mapply(cor, as.data.frame(t(estimatec_qprog_testbulk)),
as.data.frame(test_bulk_pheno))
cor_estc_qprog_testpheno_wodtd
bulk_training_data <- list("mixtures" = train_bulk_expres, "quantities" = t(train_bulk_pheno))
bulk_select_features <- rownames(bulk_qprog_reference)
bulk_start_tweak <- rep(1, length(bulk_select_features))
names(bulk_start_tweak) <- bulk_select_features
set.seed(100)
bulk_model_qprogbulk <- train_deconvolution_model(
tweak = bulk_start_tweak,
X.matrix = bulk_qprog_reference,
train.data.list = bulk_training_data,
test.data.list = bulk_training_data,
estimate.c.type = "direct",
use.implementation = "cpp"
)
estimate_c_bulk.model_qprog <- estimate_c(
X.matrix = bulk_qprog_reference,
new.data = test_bulk_expres,
DTD.model = bulk_model_qprogbulk$best.model$Tweak,
estimate.c.type = "direct"
)
cor_estC_bulktest_wtdtd <- mapply(cor, as.data.frame(test_bulk_pheno),
as.data.frame(t(estimate_c_bulk.model_qprog)))
cor_estC_bulktest_wtdtd
tirosh_qprog_data <- list("naive_qprog_reference" = cor_cell_qprog_ref_test, "DTD_qprog_reference" = cor_estc_dtd_qprog_testpheno,
"naive_qprog_reference_bulk" = cor_estc_qprog_testpheno_wodtd, "DTD_qprog_reference_bulk" = cor_estC_bulktest_wtdtd)
saveRDS(tirosh_qprog_data, "tirosh_qprog_data.rds")
# Load the pbmc data and assign
pbmc_rodeo_ref_data <- readRDS(file.path("C:/vaishnav documents/Regensburg docs/Bioinformatics/Internship/smartgit/Data", "DTD_pbmc_rodeo_ref.rds"))
# Load the pbmc data and assign
pbmc_rodeo_ref_data <- readRDS("DTD_pbmc_rodeo_ref.rds")
BiocManager::install("MultiBaC")
library(MultiBaC)
?`MultiBaC-package`
# Load required packages
library(gplots)
# Read the fasta.out file
data <- read.table("C:\Users\vaishnav\Downloads\sequence_M.fasta.out", header = TRUE)
# Read the fasta.out file
data <- read.table("C:\Users\vaishnav\Downloads\sequence_M.fasta.out")
# Read the fasta.out file
data <- read.table("C:\ Users\vaishnav\Downloads\sequence_M.fasta.out")
# Read the fasta.out file
data <- read.table(""C:\vaishnav documents\vaishnav prc\R-Intro\sequence_M.fasta.out")
# Read the fasta.out file
data <- read.table("C:\vaishnav documents\vaishnav prc\R-Intro\sequence_M.fasta.out")
# Load the data from *DTD tutorials.R* file
tiroshdata <- readRDS(file = "Data/DTD tutorials.rds")
# Load the data from *DTD tutorials.R* file
tiroshdata <- readRDS(file = "Data/DTD tutorials.rds")
# Bulk expression and phenotype data
tm_pheno_data <- tiroshdata$tm_pheno_data
# Load the data from *DTD tutorials.R* file
tiroshdata <- readRDS(file = "Data/DTD tutorials.rds")
